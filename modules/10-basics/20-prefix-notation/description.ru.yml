---

name: Префиксная нотация
theory: |

  Когда код представлен как список, появляется простор для интерпретации. Возьмем сложение двух чисел, например, 3 и 2. В виде списка такое сложение можно представить тремя разными способами:

  * `(3 + 2)`
  * `(3 2 +)`
  * `(+ 3 2)`

  В Racket используется префиксная нотация, то есть элемент определяющий действие (это не обязательно функция) стоит на первом месте. Такой способ обладает рядом преимуществ. Например он позволяет естественным образом выполнять действие с любым набором элементов:

  ```scheme
  ; 3 + 2 + 8 + 3 + 9
  (+ 3 2 8 3 9) ; 25

  ; 3 - 2 - 8 - 3 - 9
  (- 3 2 8 3 9) ; -19
  ```

  Другое преимущество - значительно проще реализовать динамическую диспетчеризацию по сравнению с другими языками. Этому способствуют и макросы.

instructions: |

  Выведите на экран значение выражения _10 - 100 - 12 - 18_

definitions:
  - name: Гомоиконность
    description: свойство некоторых языков программирования, в которых текст программы одновременно может рассматриваться как структура данных этого же языка.

tips:
  - |
    [Гомоиконичность](https://ru.wikipedia.org/wiki/%D0%93%D0%BE%D0%BC%D0%BE%D0%B8%D0%BA%D0%BE%D0%BD%D0%B8%D1%87%D0%BD%D0%BE%D1%81%D1%82%D1%8C)
