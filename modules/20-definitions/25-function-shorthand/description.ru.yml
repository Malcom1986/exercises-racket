---

name: Сокращенный синтаксис создания функции
theory: |

  Создание функций настолько частая операция, что в Racket была добавленна сокращенная версия определения функции с помощью `define`. Возьмем для примера функцию возведения в квадрат:

  ```scheme
  (define square (lambda (n) (* n n)))
  ```

  А теперь посмотрим ее сокращенную версию:

  ```scheme
  (define (square n) (* n n))
  (square 3) ; 9
  ```

  Первое что бросается в глаза, отсутствие слова `lambda`. Вместо него, после `define`, определяется список, в котором первый элемент это имя функции, остальные - параметры. Затем идет тело функции. Конкретно в функции возведения в квадрат это один параметр `n`. Пример с двумя параметрами:

  ```scheme
  (define (sum x y) (+ x y))
  (sum 3 5) ; 8
  ```

  Несмотря на наличие такой формы, нужно не забывать что в Racket нет именованых функций. `define` это всегда определение имени, значением которого становится результат выражения, будь то значение или функция.

instructions: |

  Создайте функцию с именем `sum-of-squares` (используя короткий синтаксис), которая находит сумму квадратов двух чисел.

  ```scheme
  (sum-of-squares 2 3) ; 13
  ```

definitions: []
